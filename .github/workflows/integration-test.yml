name: 'Integration test'

on:
  workflow_call:
    inputs:
      shell-installer-url:
        type: string
        required: true

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      AUTIFY_CLI_INTEGRATION_TEST_INSTALL: 1
      AUTIFY_TEST_WAIT_INTERVAL_SECOND: 0
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3

      - id: mobile-build-upload-ios
        uses: ./
        with:
          access-token: token
          autify-path: autify-with-proxy
          autify-cli-installer-url: ${{ inputs.shell-installer-url }}
          workspace-id: AAA
          build-path: ./ios.app
      - run: test ${{ steps.mobile-build-upload-ios.outputs.exit-code }} = 0
      - run: echo "${{ steps.mobile-build-upload-ios.outputs.log }}" | grep "Successfully uploaded"
      - run: test -n ${{ steps.mobile-build-upload-ios.outputs.build-id }}

      - id: mobile-build-upload-android
        uses: ./
        with:
          access-token: token
          autify-path: autify-with-proxy
          autify-cli-installer-url: ${{ inputs.shell-installer-url }}
          workspace-id: AAA
          build-path: ./android.apk
      - run: test ${{ steps.mobile-build-upload-android.outputs.exit-code }} = 0
      - run: echo "${{ steps.mobile-build-upload-android.outputs.log }}" | grep "Successfully uploaded"
      - run: test -n ${{ steps.mobile-build-upload-android.outputs.build-id }}

      - id: failed
        uses: ./
        with:
          access-token: token
          autify-path: 'false'
          autify-cli-installer-url: ${{ inputs.shell-installer-url }}
          workspace-id: AAA
          build-path: ./android.apk
        continue-on-error: true
      - run: test ${{ steps.failed.outputs.exit-code }} = 1
      - run: test -z "${{ steps.failed.outputs.log }}"
      - run: test -z ${{ steps.web-test-run.outputs.build-id }}
